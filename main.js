!function(){"use strict";function e(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class t{constructor(t,n){e(this,"_showInputError",((e,t)=>{const n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)})),e(this,"_hideInputError",(e=>{const t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)})),e(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)})),e(this,"_hasInvalidInput",(e=>e.some((e=>!e.validity.valid)))),e(this,"_toggleButtonState",((e,t)=>{this._hasInvalidInput(e)?(t.classList.add(this._inactiveButtonClass),t.setAttribute("disabled",!0)):(t.classList.remove(this._inactiveButtonClass),t.removeAttribute("disabled"))})),e(this,"_setEventListeners",(()=>{this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputList,this._buttonElement)}))}))})),e(this,"enableValidation",(()=>{this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()})),e(this,"clearValidation",(()=>{this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState(this._inputList,this._buttonElement)})),this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(".".concat(this._inputSelector))),this._buttonElement=this._formElement.querySelector(".".concat(this._submitButtonSelector))}}const n={formSelector:"form",inputSelector:"form__input",submitButtonSelector:"form__button_type_save",inactiveButtonClass:"button_inactive",inputErrorClass:"form__input_error",errorClass:"form__input-text-error_active"},s={editButton:document.querySelector(".dash__button_type_edit-info"),userTitle:document.querySelector(".dash__user-title"),userSubtitle:document.querySelector(".dash__user-subtitle"),dashForm:document.querySelector(".overlay__form_type_dash-form"),nameDashInput:document.querySelector(".form__input_type_dash-name"),subtitleDashInput:document.querySelector(".form__input_type_dash-subtitle"),closeDashFormButton:document.querySelector(".overlay__button_type_close"),overlay:document.querySelector(".overlay"),likeButtons:document.querySelectorAll(".location__like-button"),locationsContainer:document.querySelector(".locations"),locationTemplate:document.querySelector("#location-template").content,locationForm:document.querySelector(".overlay__form_type_location"),nameLocationInput:document.querySelector(".form__input_type_location-name"),imageLocationInput:document.querySelector(".form__input_type_location-image-url"),closeLocationFormButton:document.querySelector(".overlay__form_type_location .overlay__button_type_close"),addLocationButton:document.querySelector(".dash__button_type_add-place"),imageOverlayContainer:document.querySelector(".overlay__location"),imageOverlayElement:document.querySelector(".overlay__image"),imageOverlayText:document.querySelector(".overlay__location-name"),closeImageOverlayButton:document.querySelector(".overlay__location .overlay__button_type_close"),dashImageEditButton:document.querySelector(".dash__button_type_edit-image"),dashImageForm:document.querySelector(".overlay__form_type_dash-image")};function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class i{constructor(e,t,n,s,i,r){o(this,"_getTemplate",(()=>document.querySelector(this._selector).content.querySelector(".location").cloneNode(!0))),o(this,"_like",(e=>{(this._liked?this._handleLikeObj.unlike(this.id):this._handleLikeObj.like(this.id)).then((e=>{this._likes=e.likes,this.updateLike()})).catch(this._handleLikeObj.catch)})),o(this,"_openImageOverlay",(e=>{e.target===this._imageElement&&this._handleCardClick({name:this._name,link:this._link}),console.log("image")})),o(this,"_setEventListeners",(()=>{this._imageElement.addEventListener("click",this._openImageOverlay),this._element.querySelector(".location__button_type_delete").addEventListener("click",this._handleDeleteClick),this._element.querySelector(".location__button_type_like").addEventListener("click",this._like)})),o(this,"_removeEventListeners",(()=>{this._imageElement.removeEventListener("click",this._openImageOverlay),this._binElement.removeEventListener("click",this._handleDeleteClick),this._element.querySelector(".location__button_type_like").removeEventListener("click",this._like)})),o(this,"_deleteElement",(e=>{this._removeEventListeners(),this._element.remove(),this._element=null})),o(this,"getElement",(()=>(this._element=this._getTemplate(),this._binElement=this._element.querySelector(".location__button_type_delete"),this._isOwner&&this._binElement.classList.add("button_visible"),this._element.id=this.id,this._imageElement=this._element.querySelector(".location__image"),this._likeCounter=this._element.querySelector(".location__like-number"),this._likeButton=this._element.querySelector(".location__button_type_like"),this._element.querySelector(".location__title").textContent=this._name,this._imageElement.src=this._link,this._imageElement.alt=this._name,this._setEventListeners(),this._element))),this.id=e._id,this._isOwner=n,this._link=e.link,this._name=e.name,this._liked=!1,this._selector=t,this._element=null,this._handleCardClick=s,this._likes=e.likes,this._handleDeleteClick=i,this._handleLikeObj=r}getLikes(){return this._likes.map((e=>e._id))}updateLike(){this._likeCounter.textContent=this._likes.length,this._liked=!this._liked,this._likeButton.classList.toggle("location__button_type_like_active")}}function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class l{constructor(e,t){r(this,"_handleEsqClose",(e=>{"Escape"===e.key&&this.close()})),r(this,"_handleClickClose",(e=>{(e.target.classList.contains("overlay_opened")||e.target.classList.contains("overlay__button_type_close"))&&this.close()})),this._element=document.querySelector(e),this._containerElement=this._element.querySelector(t)}setEventListeners(){this._element.addEventListener("mousedown",this._handleClickClose),document.addEventListener("keydown",this._handleEsqClose)}_removeEventListeners(){this._element.removeEventListener("mousedown",this._handleClickClose),document.removeEventListener("keydown",this._handleEsqClose)}open(){this._element.classList.add("overlay_opened"),this._containerElement.classList.add("overlay__element_opened")}close(){this._removeEventListeners(),this._element.classList.remove("overlay_opened"),this._containerElement.classList.remove("overlay__element_opened")}}function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class c extends l{constructor(e,t){let{popupSelector:n,popupElementSelector:s,inputSelector:o,buttonSelector:i}=e;super(n,s),a(this,"getInputValues",(()=>this._inputList.reduce(((e,t)=>(e[t.name]=t.value,e)),{}))),a(this,"setInputs",(e=>{for(let t=0;t<e.length;t++)this._inputList[t].value=e[t]})),this._inputList=Array.from(this._containerElement.querySelectorAll(o)),this._formElement=this._containerElement.querySelector(".form"),this._closePopupCallback=t,this.formInputs=this._formElement.elements,this._buttonElement=this._formElement.querySelector(i),this._buttonElementTextContent=this._buttonElement.textContent}renderLoading(e){e?(this._buttonElement.textContent="Saving...",this._buttonElement.disabled=!0):(this._buttonElement.textContent=this._buttonElementTextContent,this._buttonElement.disabled=!1)}setEventListeners(){super.setEventListeners(),this._formElement.addEventListener("submit",this._closePopupCallback)}_removeEventListeners(){this._formElement.removeEventListener("submit",this._closePopupCallback),super._removeEventListeners()}close(){this._formElement.reset(),super.close()}}function _(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function h(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const u=new class{constructor(e){h(this,"likeCard",(e=>fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponseStatus))),h(this,"unlikeCard",(e=>fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponseStatus))),this._baseUrl=e.baseUrl,this._headers=e.headers}_logResult(e){return console.log(e),e}_checkResponseStatus(e){return e.ok?e.json():Promise.reject("Error stauts : ".concat(e.status))}logError(e){console.log(e)}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponseStatus)}getUserInfo(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponseStatus)}setUserInfo(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponseStatus)}addNewCard(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponseStatus)}deleteCard(e){let{id:t}=e;return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this._headers}).then(this._checkResponseStatus)}changeProfilePicture(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponseStatus)}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"af221e9d-d09f-46f1-bd82-7b0c5297a738","Content-Type":"application/json"}}),d={dashValidatior:new t(n,s.dashForm),locationValidator:new t(n,s.locationForm),dashImageValidator:new t(n,s.dashImageForm)},m=new class{constructor(e){let{nameSelector:t,aboutSelector:n,imageSelector:s}=e;_(this,"getUserInfo",(()=>({name:this._nameElement.textContent,about:this._aboutElement.textContent,id:this.id}))),_(this,"setUserImage",(e=>{this._imageElement.style.backgroundImage="url(".concat(e,")")})),_(this,"setUserInfo",(e=>{let{name:t,about:n,avatar:s,_id:o}=e;this._nameElement.textContent=t,this._aboutElement.textContent=n,this.setUserImage(s),this.id=o})),this._nameElement=document.querySelector(t),this._aboutElement=document.querySelector(n),this._imageElement=document.querySelector(s),this.id=null}}({nameSelector:".dash__user-title",aboutSelector:".dash__user-subtitle",imageSelector:".dash__profile-image"}),p=new class extends l{constructor(e){let{popupSelector:t,containerSelector:n,imageSelector:s,textSelector:o}=e;var i,r;super(t,n),r=e=>{this._imageElement.src=e.link,this._imageElement.alt="".concat(e.name," picture"),this._textElement.textContent=e.name,super.open()},(i="open")in this?Object.defineProperty(this,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):this.open=r,this._imageElement=document.querySelector(s),this._textElement=document.querySelector(o)}}({popupSelector:".overlay",containerSelector:".overlay__location",imageSelector:".overlay__image",textSelector:".overlay__location-name"}),y=new c({popupSelector:".overlay",popupElementSelector:".overlay__form_type_dash-form",inputSelector:".form__input",buttonSelector:".form__button_type_save"},(e=>{e.preventDefault(),y.renderLoading(!0),u.setUserInfo(y.getInputValues()).then((e=>m.setUserInfo(e))).then((e=>y.close())).finally((e=>{y.renderLoading(!1)})).catch(u.logError)})),v=new c({popupSelector:".overlay",popupElementSelector:".overlay__form_type_location",inputSelector:".form__input",buttonSelector:".form__button_type_save"},(e=>{e.preventDefault(),v.renderLoading(!0),u.addNewCard(v.getInputValues()).then((e=>b.addItem(e))).then((e=>v.close())).finally((e=>v.renderLoading(!1))).catch(u.logError)})),E=new c({popupSelector:".overlay",popupElementSelector:".overlay__form_type_dash-image",inputSelector:".form__input",buttonSelector:".form__button_type_save"},(e=>{e.preventDefault(),E.renderLoading(!0),u.changeProfilePicture(E.getInputValues()).then((e=>m.setUserInfo(e))).then((e=>E.close())).finally((e=>E.renderLoading(!1))).catch(u.logError)})),b=new class{constructor(e,t){let{data:n,renderer:s}=e;this._data=n,this._renderedItems=[],this._renderer=s,this._container=document.querySelector(t),this._userId=null}setRenderedElements(e){this._renderedItems=e}setData(e){this._data=e}getData(){return this._data}setOwner(e){this._userId=e}addItem(e){this._data=[...this._data,e],this.renderElements()}deleteItem(e){this._data=this._data.filter((t=>t._id!==e.id)),this.deleteElement(e.id)}clear(){this._container.innerHTML=""}appendElement(e){this._container.prepend(e)}deleteElement(e){this._container.querySelector("#".concat(CSS.escape(e))).remove()}renderElements(){this.clear(),this._renderedItems=this._data.map((e=>this._renderer(e,this._userId))),this._renderedItems.forEach((e=>this.appendElement(e)))}}({data:null,renderer:(e,t)=>{const n=t===e.owner._id,s=new i(e,"#location-template",n,(e=>{p.setEventListeners(),p.open(e)}),(()=>{S.formInputs.id.value=e._id,S.setEventListeners(),S.open()}),{like:u.likeCard,unlike:u.unlikeCard,catch:u.logError}),o=s.getLikes().filter((e=>e===t)),r=s.getElement();return o.length>0&&s.updateLike(),r}},".locations"),S=new c({popupSelector:".overlay",popupElementSelector:".overlay__form_type_delete-location",inputSelector:".form__input",buttonSelector:".form__button_type_save"},(e=>{e.preventDefault();const t=S.getInputValues();S.renderLoading(!0),u.deleteCard(t).then((e=>{b.deleteItem(t)})).finally((e=>{S.renderLoading(!1),S.close()})).catch(u.logError)}));s.addLocationButton.addEventListener("click",(e=>{d.locationValidator.clearValidation(),v.setEventListeners(),v.open()})),s.editButton.addEventListener("click",(e=>{const t=m.getUserInfo(),{name:n,about:s}=y.formInputs;n.value=t.name,s.value=t.about,d.dashValidatior.clearValidation(),y.setEventListeners(),y.open()})),s.dashImageEditButton.addEventListener("click",(e=>{E.setEventListeners(),E.open()})),Object.keys(d).map((e=>{d[e].enableValidation()})),Promise.all([u.getUserInfo(),u.getInitialCards()]).then((e=>{let[t,n]=e;m.setUserInfo(t),b.setOwner(m.id),b.setData(n),b.renderElements()})).catch(u.logError)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,